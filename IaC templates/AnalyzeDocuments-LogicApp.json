{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_AnalyzeDocuments_name": {
            "defaultValue": "AnalyzeDocuments",
            "type": "String"
        },
        "connections_azureblob_3_externalid": {
            "defaultValue": "/subscriptions/<subscriptionId>/resourceGroups/<rgName>/providers/Microsoft.Web/connections/<BlobconnectionName>",
            "type": "String"
        },
        "connections_keyvault_externalid": {
            "defaultValue": "/subscriptions/<subscriptionId>/resourceGroups/<rgName>/providers/Microsoft.Web/connections/<keyvaultconnectionName>",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_AnalyzeDocuments_name')]",
            "location": "usgovvirginia",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_blob_is_added_or_modified_(properties_only)_(V2)": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 3
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Second",
                                "interval": 3
                            },
                            "splitOn": "@triggerBody()",
                            "metadata": {
                                "JTJmc2VjdXJldHJhbnNmZXI=": "/securetransfer"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/triggers/batch/onupdatedfile",
                                "queries": {
                                    "checkBothCreatedAndModifiedDateTime": false,
                                    "folderId": "JTJmc2VjdXJldHJhbnNmZXI=",
                                    "maxFileCount": 10
                                }
                            }
                        }
                    },
                    "actions": {
                        "Create_SAS_URI_by_path_(V2)": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Permissions": "Read"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/datasets/@{encodeURIComponent('AccountNameFromSettings')}/CreateSharedLinkByPath",
                                "queries": {
                                    "path": "@triggerBody()?['Path']"
                                }
                            }
                        },
                        "Create_blob_(V2)": {
                            "runAfter": {
                                "Until": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('HTTP_2')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files",
                                "queries": {
                                    "folderPath": "/dataflow-sink",
                                    "name": "@{replace(triggerBody()?['DisplayName'], '.pdf', '.json')}",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Get_secret": {
                            "runAfter": {
                                "Create_SAS_URI_by_path_(V2)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('formRecognizer')}/value"
                            }
                        },
                        "HTTP": {
                            "runAfter": {
                                "Get_secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": {
                                    "urlSource": "@body('Create_SAS_URI_by_path_(V2)')?['WebUrl']"
                                },
                                "headers": {
                                    "Ocp-Apim-Subscription-Key": "@body('Get_secret')?['value']",
                                    "Ocp-Apim-Subscription-Region": "usgovvirginia"
                                },
                                "method": "POST",
                                "uri": "https://<AI-service-name>.cognitiveservices.azure.us/formrecognizer/documentModels/prebuilt-idDocument:analyze?api-version=2023-07-31"
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "analyze-status",
                                        "type": "string",
                                        "value": "@{null}"
                                    }
                                ]
                            }
                        },
                        "Until": {
                            "actions": {
                                "Delay": {
                                    "runAfter": {
                                        "Set_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Wait",
                                    "inputs": {
                                        "interval": {
                                            "count": 10,
                                            "unit": "Second"
                                        }
                                    }
                                },
                                "HTTP_2": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "headers": {
                                            "Ocp-Apim-Subscription-Key": "@body('Get_secret')?['value']"
                                        },
                                        "method": "GET",
                                        "uri": "@{outputs('HTTP')['headers']['Operation-Location']}"
                                    }
                                },
                                "Set_variable": {
                                    "runAfter": {
                                        "HTTP_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "analyze-status",
                                        "value": "\t\n@{body('HTTP_2')['status']}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "expression": "@equals(variables('analyze-status'), 'succeeded')",
                            "limit": {
                                "count": 60,
                                "timeout": "PT1H"
                            },
                            "type": "Until"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob_1": {
                                "connectionId": "[parameters('connections_azureblob_3_externalid')]",
                                "connectionName": "azureblob-3",
                                "id": "/subscriptions/<subscriptionId>/providers/Microsoft.Web/locations/usgovvirginia/managedApis/azureblob"
                            },
                            "keyvault": {
                                "connectionId": "[parameters('connections_keyvault_externalid')]",
                                "connectionName": "keyvault",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "/subscriptions/<subscriptionId>/providers/Microsoft.Web/locations/usgovvirginia/managedApis/keyvault"
                            }
                        }
                    }
                }
            }
        }
    ]
}
